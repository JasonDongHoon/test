// 주제: 연산자 - 비트 논리 연산자 응용 (하)
// => AND 연산자의 활용 후
// => 특정 위치의 비트들의 값이 1인지 확인할 때 사용할 수 있다.

package step04;

public class Exam042_3 {
  public static void main(String[] args) {
    //문제: 이력서에 프로그래밍 가능한 항목을 입력 받기
    // => 프로그래밍 보기
    //    Java, JavaScript, HTML, CSS, C, C++, PHP, Python, Perl, VB,
    //    R, Groovy, XML, Scala, Ruby, Swift, Object-C, Pascal, C#, Go
    int language = 0b00000000_00001111_01111101_10001100;
    //             0b00000000_00001000_00000000_00000000 <-- Java
    //             0b00000000_00000100_00000000_00000000 <-- JavaScript
    //             0b00000000_00000010_00000000_00000000 <-- HTML
    //             0b00000000_00000001_00000000_00000000 <-- CSS
    //             0b00000000_00000000_10000000_00000000 <-- C
    //             0b00000000_00000000_01000000_00000000 <-- C++

    // Java, C, C++을 할 줄 아는 사람인지 검사하라!
    // Java + C + C++ => 0b00000000_00001000_11000000_00000000
    /* 계산 예)
        0b00000000_00001111_01111101_10001100
      & 0b00000000_00001000_11000000_00000000
      ----------------------------------------
        0b00000000_00001000_01000000_00000000
    */
    String result = ((language & 0x8C000) == 0x8C000) ? "Yes" : "No";
    System.out.println(result);
  }
}

/*









*/
